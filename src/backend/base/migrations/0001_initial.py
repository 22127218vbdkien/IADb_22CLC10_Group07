# Generated by Django 5.0.6 on 2024-07-10 09:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_anilist', models.IntegerField(null=True, unique=True)),
                ('id_mal', models.IntegerField(null=True)),
                ('romaji_title', models.CharField(max_length=250)),
                ('english_title', models.CharField(max_length=250, null=True)),
                ('native_title', models.CharField(max_length=250, null=True)),
                ('format', models.CharField(choices=[('TV', 'Tv'), ('TV_SHORT', 'Tv Short'), ('MOVIE', 'Movie'), ('SPECIAL', 'Special'), ('OVA', 'Ova'), ('ONA', 'Ona'), ('MUSIC', 'Music')], max_length=10, null=True)),
                ('status', models.CharField(choices=[('FINISHED', 'Finished'), ('RELEASING', 'Releasing'), ('NOT_YET_RELEASED', 'Not Yet Released'), ('CANCELLED', 'Cancelled'), ('HIATUS', 'Hiatus')], max_length=20, null=True)),
                ('description', models.TextField(null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('episodes', models.SmallIntegerField(null=True)),
                ('duration', models.SmallIntegerField(null=True)),
                ('source', models.CharField(choices=[('ORIGINAL', 'Original'), ('MANGA', 'Manga'), ('LIGHT_NOVEL', 'Light Novel'), ('VISUAL_NOVEL', 'Visual Novel'), ('VIDEO_GAME', 'Video Game'), ('OTHER', 'Other'), ('NOVEL', 'Novel'), ('DOUJINSHI', 'Doujinshi'), ('ANIME', 'Anime'), ('WEB_NOVEL', 'Web Novel'), ('LIVE_ACTION', 'Live Action'), ('GAME', 'Game'), ('COMIC', 'Comic'), ('MULTIMEDIA_PROJECT', 'Multimedia Project'), ('PICTURE_BOOK', 'Picture Book')], max_length=20, null=True)),
                ('hashtag', models.CharField(max_length=250, null=True)),
                ('trailer', models.CharField(max_length=250, null=True)),
                ('cover_img_large', models.CharField(max_length=250, null=True)),
                ('cover_img_med', models.CharField(max_length=250, null=True)),
                ('banner_img', models.CharField(max_length=250, null=True)),
                ('weighted_score', models.SmallIntegerField(default=0, null=True)),
                ('anilist_score', models.SmallIntegerField(default=0, null=True)),
                ('mean_score', models.SmallIntegerField(default=0, null=True)),
                ('popularity', models.IntegerField(default=0, null=True)),
                ('trending', models.BigIntegerField(default=0, null=True)),
                ('favorites', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, null=True)),
                ('name_native', models.CharField(max_length=250, null=True)),
                ('img_large', models.CharField(max_length=250, null=True)),
                ('img_med', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('gender', models.CharField(max_length=50, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('age', models.TextField(null=True)),
                ('favorites', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalSite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('icon', models.CharField(max_length=250, null=True)),
                ('language', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('name_native', models.CharField(max_length=250, null=True)),
                ('img_large', models.CharField(max_length=250, null=True)),
                ('img_med', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('gender', models.CharField(max_length=50, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('age', models.SmallIntegerField(null=True)),
                ('home_town', models.CharField(max_length=250, null=True)),
                ('favorites', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=150)),
                ('is_general_spoiler', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeProducedByStudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main', models.BooleanField(default=False)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.anime')),
            ],
        ),
        migrations.CreateModel(
            name='AnimeRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(choices=[('SEQUEL', 'Sequel'), ('PARENT', 'Parent'), ('SIDE_STORY', 'Side Story'), ('CHARACTER', 'Character'), ('SUMMARY', 'Summary'), ('SPIN_OFF', 'Spin Off'), ('OTHER', 'Other'), ('COMPILATION', 'Compilation'), ('CONTAINS', 'Contains')], max_length=15)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anime_id', to='base.anime')),
                ('senior_anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senior_anime_id', to='base.anime')),
            ],
            options={
                'unique_together': {('anime_id', 'senior_anime_id', 'relation')},
            },
        ),
        migrations.AddField(
            model_name='anime',
            name='relations',
            field=models.ManyToManyField(blank=True, through='base.AnimeRelation', to='base.anime'),
        ),
        migrations.CreateModel(
            name='AnimeSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('synonym', models.TextField(max_length=250)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.anime')),
            ],
        ),
        migrations.CreateModel(
            name='AnimeExternalLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=250)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animeexternallinks', to='base.anime')),
                ('site_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.externalsite')),
            ],
            options={
                'ordering': ['anime_id'],
            },
        ),
        migrations.CreateModel(
            name='StaffExternalLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=250)),
                ('site_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.externalsite')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.staff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffInAnime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_role', models.CharField(max_length=250)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.anime')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.staff')),
            ],
            options={
                'unique_together': {('anime_id', 'staff_id', 'staff_role')},
            },
        ),
        migrations.AddField(
            model_name='staff',
            name='animes',
            field=models.ManyToManyField(blank=True, through='base.StaffInAnime', to='base.anime'),
        ),
        migrations.AddField(
            model_name='anime',
            name='staffs',
            field=models.ManyToManyField(blank=True, through='base.StaffInAnime', to='base.staff'),
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('favorites', models.IntegerField(default=0)),
                ('animes', models.ManyToManyField(blank=True, through='base.AnimeProducedByStudio', to='base.anime')),
            ],
        ),
        migrations.AddField(
            model_name='animeproducedbystudio',
            name='studio_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.studio'),
        ),
        migrations.AddField(
            model_name='anime',
            name='studios',
            field=models.ManyToManyField(blank=True, through='base.AnimeProducedByStudio', to='base.studio'),
        ),
        migrations.CreateModel(
            name='AnimeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.SmallIntegerField(default=0, null=True)),
                ('is_spoiler', models.BooleanField(default=False, null=True)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.anime')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.tag')),
            ],
            options={
                'unique_together': {('anime_id', 'tag_id')},
            },
        ),
        migrations.AddField(
            model_name='anime',
            name='tags',
            field=models.ManyToManyField(blank=True, through='base.AnimeTag', to='base.tag'),
        ),
        migrations.CreateModel(
            name='CharacterInAnime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char_role', models.CharField(choices=[('MAIN', 'Main'), ('SUPPORTING', 'Supporting'), ('BACKGROUND', 'Background')], max_length=10, null=True)),
                ('anime_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.anime')),
                ('char_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.character')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.staff')),
            ],
            options={
                'unique_together': {('char_id', 'anime_id', 'staff_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='animeproducedbystudio',
            unique_together={('anime_id', 'studio_id', 'is_main')},
        ),
    ]
